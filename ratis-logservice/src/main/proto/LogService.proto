/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto3";
option java_package = "org.apache.ratis.logservice.proto";
option java_outer_classname = "LogServiceProtos";
option java_generate_equals_and_hash = true;
package ratis.logservice;


message LogNameProto {
  string name = 1;
}

message LogStreamProto {
  LogNameProto logName = 1;
  uint64 size = 2;
  LogStreamState state = 3;
}

enum LogStreamState {
  OPEN = 0;
  CLOSED = 1;
  ARCHIVING = 2;
  ARCHIVED = 3;
  DELETED = 4;
}

enum ArchivalStatus {
	SUBMITTED = 0;
	STARTED = 1;
	RUNNING = 2;
	INTERRUPTED = 3;
	COMPLETED = 4;
	FAILED = 5;
}

message ChangeStateLogRequestProto {
  LogNameProto logName = 1;
  LogStreamState state = 2;
  LogServiceException exception = 3;
  bool force = 4;
}

message GetStateRequestProto {
  LogNameProto logName = 1;
}

message ChangeStateReplyProto {
  LogServiceException exception = 1;
}

message GetStateReplyProto {
  LogStreamState state = 1;
}

// Generic message for Log Service exception
message LogServiceException {
  string exceptionClassName = 1;
  string errorMsg = 2;
  bytes stacktrace = 3;
}

// Write request (append log entry(ies))
message AppendLogEntryRequestProto {
	LogNameProto logName = 1;
	repeated bytes data = 2;
}

// Write reply
message AppendLogEntryReplyProto {
	repeated uint64 recordId = 1;
	// optional
	LogServiceException exception = 2;
}


// Sync log (make all previous writes durable)
message SyncLogRequestProto {
	LogNameProto logName = 1;
}

// Sync reply
message SyncLogReplyProto {
	uint64 lastRecordId = 1;
	// optional
	LogServiceException exception = 2;
}

// Read request
message ReadLogRequestProto {
	LogNameProto logName = 1;
	uint32 numRecords = 2;
	// start record id
	uint64 startRecordId = 3;
}

// Read reply
message ReadLogReplyProto {
	repeated bytes logRecord = 1;
	// optional
	LogServiceException exception = 2;
}

// Get log length request
message GetLogLengthRequestProto {
	LogNameProto logName = 1;
}

// Get log length reply
message GetLogLengthReplyProto {
	uint64 length = 1;
	//optional
	LogServiceException exception = 2;
}

// Get the size of a log (in bytes) request
message GetLogSizeRequestProto {
    LogNameProto logName = 1;
}

// Get the size of a log (in bytes) reply
message GetLogSizeReplyProto {
    uint64 size = 1;
    LogServiceException exception = 2;
}

message GetLogStartIndexRequestProto {
	LogNameProto logName  = 1;
}

message GetLogStartIndexReplyProto {
	uint64 startIndex = 1;
	//optional
	LogServiceException exception = 2;
}

message GetLogLastCommittedIndexRequestProto {
	LogNameProto logName  = 1;
}

message GetLogLastCommittedIndexReplyProto {
	uint64 lastCommittedIndex = 1;
	//optional
	LogServiceException exception = 2;
}

message ArchiveLogRequestProto {
	LogNameProto logName = 1;
	string location = 2;
	uint64 lastArchivedRaftIndex = 3;
	bool isExport = 4;
	ArchivalStatus status = 5;
}

message ArchiveLogReplyProto {
	LogServiceException exception = 1;
}

message GetExportInfoRequestProto {
	LogNameProto logName = 1;
}

message GetExportInfoReplyProto {
	repeated ArchiveLogRequestProto info = 1;
	LogServiceException exception = 2;
}

message LogServiceRequestProto {
  oneof Request {
    ChangeStateLogRequestProto changeState = 1;
    GetStateRequestProto getState = 2;
    ReadLogRequestProto readNextQuery = 3;
    GetLogLengthRequestProto lengthQuery = 4;
	GetLogStartIndexRequestProto startIndexQuery = 5;
	AppendLogEntryRequestProto appendRequest = 6;
	SyncLogRequestProto          syncRequest = 7;
	GetLogLastCommittedIndexRequestProto lastIndexQuery = 8;
	GetLogSizeRequestProto sizeRequest = 9;
	ArchiveLogRequestProto archiveLog = 10;
	GetExportInfoRequestProto exportInfo= 11;
  }
}

